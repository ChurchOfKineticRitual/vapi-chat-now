@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    /* Dark mode op-art theme - monochrome with green accents */
    --background: 0 0% 8%;
    --foreground: 0 0% 98%;
    --card: 0 0% 12%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 12%;
    --popover-foreground: 0 0% 98%;
    --primary: 142 76% 36%;
    --primary-foreground: 0 0% 0%;
    --secondary: 0 0% 16%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 16%;
    --muted-foreground: 0 0% 65%;
    --accent: 142 76% 36%;
    --accent-foreground: 0 0% 0%;
    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 20%;
    --input: 0 0% 16%;
    --ring: 142 76% 36%;
    
    /* Op-art specific colors */
    --geometric-1: 0 0% 24%;
    --geometric-2: 0 0% 32%;
    --green-accent: 142 76% 36%;
    --green-accent-soft: 142 76% 20%;
    --blue-accent: 215 100% 60%;
    --blue-accent-soft: 215 100% 30%;
    --teal-accent: 174 72% 56%;
    --teal-accent-soft: 174 72% 30%;
    --text-primary: 0 0% 98%;
    --text-secondary: 0 0% 80%;
    --text-muted: 0 0% 65%;
    
    --radius: 0.75rem;
  }

  .dark {
    /* Keep same colors for dark mode since we're defaulting to dark */
    --background: 0 0% 8%;
    --foreground: 0 0% 98%;
    --card: 0 0% 12%;
    --card-foreground: 0 0% 98%;
    --popover: 0 0% 12%;
    --popover-foreground: 0 0% 98%;
    --primary: 142 76% 36%;
    --primary-foreground: 0 0% 0%;
    --secondary: 0 0% 16%;
    --secondary-foreground: 0 0% 98%;
    --muted: 0 0% 16%;
    --muted-foreground: 0 0% 65%;
    --accent: 142 76% 36%;
    --accent-foreground: 0 0% 0%;
    --destructive: 0 84% 60%;
    --destructive-foreground: 0 0% 98%;
    --border: 0 0% 20%;
    --input: 0 0% 16%;
    --ring: 142 76% 36%;
  }
}

@layer base {
  * {
    border-color: hsl(var(--border));
  }
  body {
    background-color: hsl(var(--background));
    color: hsl(var(--foreground));
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
  }
  
  html {
    color-scheme: dark;
  }
}

@layer components {
  .op-art-pattern {
    background-image: 
      linear-gradient(45deg, hsl(var(--geometric-1)) 25%, transparent 25%), 
      linear-gradient(-45deg, hsl(var(--geometric-1)) 25%, transparent 25%), 
      linear-gradient(45deg, transparent 75%, hsl(var(--geometric-2)) 75%), 
      linear-gradient(-45deg, transparent 75%, hsl(var(--geometric-2)) 75%);
    background-size: 20px 20px;
    background-position: 0 0, 0 10px, 10px -10px, -10px 0px;
  }
  
  .pulse-green {
    animation: pulse-green 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }
  
  .subtle-pulse {
    position: relative;
    background: linear-gradient(135deg, #ffffff 0%, #f8f8f8 50%, #ffffff 100%);
    animation: subtle-breathe 4s ease-in-out infinite;
  }
  
  .subtle-pulse::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(255,255,255,0.1) 0%, rgba(255,255,255,0.3) 50%, rgba(255,255,255,0.1) 100%);
    border-radius: inherit;
    opacity: 0;
    animation: subtle-shimmer 6s ease-in-out infinite;
  }
  
  @keyframes subtle-breathe {
    0%, 100% {
      background: linear-gradient(135deg, #ffffff 0%, #f8f8f8 50%, #ffffff 100%);
      box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.1);
    }
    50% {
      background: linear-gradient(135deg, #f8f8f8 0%, #ffffff 50%, #f8f8f8 100%);
      box-shadow: 0 0 20px 0 rgba(255, 255, 255, 0.05);
    }
  }
  
  @keyframes subtle-shimmer {
    0%, 100% {
      opacity: 0;
      transform: translateX(-100%);
    }
    50% {
      opacity: 0.3;
      transform: translateX(100%);
    }
  }
  
  @keyframes pulse-green {
    0%, 100% {
      opacity: 1;
      box-shadow: 0 0 0 0 hsl(var(--green-accent) / 0.7);
    }
    50% {
      opacity: 0.8;
      box-shadow: 0 0 0 10px hsl(var(--green-accent) / 0);
    }
  }
  
  @keyframes pulse-blue {
    0%, 100% {
      opacity: 1;
      box-shadow: 0 0 0 0 hsl(var(--blue-accent) / 0.7);
    }
    50% {
      opacity: 0.8;
      box-shadow: 0 0 0 10px hsl(var(--blue-accent) / 0);
    }
  }
  
  .typing-indicator {
    animation: typing 1.4s infinite ease-in-out;
  }
  
  .streaming-assistant {
    position: relative;
  }
  
  .streaming-assistant::after {
    content: '';
    display: inline-block;
    width: 8px;
    height: 16px;
    background-color: hsl(var(--accent));
    margin-left: 4px;
    animation: cursor-blink 1s infinite;
  }
  
  @keyframes typing {
    0%, 80%, 100% {
      opacity: 0.3;
    }
    40% {
      opacity: 1;
    }
  }
  
  @keyframes cursor-blink {
    0%, 50% {
      opacity: 1;
    }
    51%, 100% {
      opacity: 0;
    }
  }
  
  /* Ambient background visualization for idle state */
  .ambient-glow {
    background: radial-gradient(circle at 50% 50%, 
      rgba(59, 130, 246, 0.1) 0%, 
      rgba(34, 197, 94, 0.1) 50%, 
      transparent 100%);
    animation: ambient-pulse 8s ease-in-out infinite;
  }
  
  @keyframes ambient-pulse {
    0%, 100% {
      opacity: 0.3;
      transform: scale(1);
    }
    50% {
      opacity: 0.6;
      transform: scale(1.1);
    }
  }
  
  /* Smooth height transitions for responsive bars */
  .responsive-bar {
    transition: height 0.1s cubic-bezier(0.4, 0, 0.2, 1);
    will-change: height;
  }
  
  /* Optimized animations for React Spring */
  .react-spring-optimized {
    will-change: transform, opacity, filter;
    backface-visibility: hidden;
    perspective: 1000px;
  }
  
  /* Reduce motion preferences */
  @media (prefers-reduced-motion: reduce) {
    .subtle-pulse,
    .pulse-green,
    .pulse-blue,
    .ambient-glow {
      animation: none;
    }
    
    .react-spring-optimized {
      transition: none;
    }
  }
  
  /* Mobile-first button interactions - no hover states */
  .mobile-button {
    transition: transform 0.1s ease-out, background-color 0.2s ease;
    user-select: none;
    -webkit-tap-highlight-color: transparent;
  }
  
  .mobile-button:active {
    transform: scale(0.95);
  }
  
  /* Enhanced focus states for accessibility - mobile friendly */
  .focus-enhanced:focus-visible {
    outline: 2px solid hsl(var(--accent));
    outline-offset: 2px;
    border-radius: var(--radius);
  }
  
}